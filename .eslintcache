[{"C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\index.js":"1","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\App.js":"2","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\DailyPic.js":"3","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\Home.js":"4","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\Mars.js":"5","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\NoMatch.js":"6","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\NaturalEvents.js":"7","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\components\\Layout.js":"8","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\components\\Jumbotron.js":"9","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\components\\NavigationBar.js":"10"},{"size":230,"mtime":1597969644000,"results":"11","hashOfConfig":"12"},{"size":2144,"mtime":1610302532342,"results":"13","hashOfConfig":"12"},{"size":5710,"mtime":1610217306247,"results":"14","hashOfConfig":"12"},{"size":8260,"mtime":1610220456074,"results":"15","hashOfConfig":"12"},{"size":17711,"mtime":1610220245530,"results":"16","hashOfConfig":"12"},{"size":127,"mtime":1597265568000,"results":"17","hashOfConfig":"12"},{"size":16872,"mtime":1610295472581,"results":"18","hashOfConfig":"12"},{"size":194,"mtime":1597019778000,"results":"19","hashOfConfig":"12"},{"size":1370,"mtime":1610217125404,"results":"20","hashOfConfig":"12"},{"size":2556,"mtime":1610302821419,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"wapft3",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"25"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\index.js",["49"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport index from './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["50","51"],"C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\App.js",["52"],"import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Home from './Home';\nimport Mars from './Mars';\nimport DailyPic from './DailyPic';\nimport NoMatch from './NoMatch';\nimport NaturalEvents from './NaturalEvents';\n\nimport Layout from './components/Layout';\nimport NavigationBar from './components/NavigationBar';\nimport Jumbotron from './components/Jumbotron';\n\nimport homeBackground from './assets/blackBackground.jpg';\nimport jumboBackground from './assets/jumboHome.jpg';\n\nconst Styles = styled.div`\n  .websiteBackground{\n    background: url(${props => (props.backgroundColor)}) center;\n  }\n`;\n\nclass App extends Component {\n   constructor(props){\n      super(props);\n      this.state = {\n         bgColor:homeBackground,\n         jumboColor:jumboBackground,\n         jumboHeader:\"jumboHeader\",\n         jumboText:\"jumboText\",\n      };\n   }\n\n\n   handlePageChange = (bgColor, jumboColor, jumboHeader, jumboText) => {\n     this.setState({bgColor:bgColor, jumboColor:jumboColor, jumboHeader:jumboHeader, jumboText:jumboText});\n   }\n\n  render() {\n    return (\n      <Styles backgroundColor = {this.state.bgColor}>\n      <Router>\n        <NavigationBar onChangePage={this.handlePageChange}/>\n        <Jumbotron jumboColor={this.state.jumboColor} jumboHeader={this.state.jumboHeader} jumboText={this.state.jumboText}/>\n        <div className=\"websiteBackground\">\n            <Switch>\n             <Route exact path=\"/hubble\" render={(props) => (<Home {...props} onChangePage={this.handlePageChange} />)}/>\n             <Route path=\"/hubble/dailypic\" render={(props) => (<DailyPic {...props} onChangePage={this.handlePageChange} />)}/>\n             <Route path=\"/hubble/mars\" render={(props) => (<Mars {...props} onChangePage={this.handlePageChange} />)}/>\n             <Route path=\"/hubble/naturalevents\" render={(props) => (<NaturalEvents {...props} onChangePage={this.handlePageChange} />)}/>\n             <Route component={NoMatch}/>\n            </Switch>\n        </div>\n      </Router>\n      </Styles>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\DailyPic.js",["53"],"import React from 'react';\r\nimport {Button, Container, Col, Row} from 'react-bootstrap';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport jumboDailyPic from './assets/jumboDaily.jpg';\r\nimport backgroundDailyPic from './assets/greenBackground.jpg';\r\n\r\nconst Styles = styled.div`\r\n  .imgContainer {\r\n    position: relative;\r\n    margin: auto;\r\n    margin-bottom: 15px;\r\n    overflow: hidden;\r\n  }\r\n  .paragraphText {\r\n    position:relative;\r\n    margin:auto;\r\n    color:#d3d3d3;\r\n    text-align:justify;\r\n    font-size:14px;\r\n    max-width:75%;\r\n    margin-bottom: 20px;\r\n  }\r\n  .buttonText {\r\n    position:relative;\r\n    margin:auto;\r\n    padding-bottom:10px;\r\n    top:50%;\r\n    font-size:${props => (((props.widthOfPage/30))+\"px\")};\r\n  }\r\n  .titleText {\r\n    position:relative;\r\n    margin:auto;\r\n    margin-bottom:10px;\r\n    color:#FFFFFF;\r\n    text-align:center;\r\n    font-size:35px;\r\n  }\r\n  .spaceImage {\r\n    position:relative;\r\n    margin:auto;\r\n    width:100%;\r\n    display: block;\r\n    min-height: ${props => (((props.widthOfPage/3.3))+\"px\")};\r\n    max-height: ${props => (((props.widthOfPage/2.5))+\"px\")};\r\n  }\r\n`;\r\nconst LeftButton = styled(Button)`\r\n   position: absolute;\r\n   margin:auto;\r\n   padding-top:0px;\r\n   padding-bottom:0px;\r\n   right: 0px;\r\n`;\r\nconst RightButton = styled(Button)`\r\n  position:absolute;\r\n  padding-top:0px;\r\n  padding-bottom:0px;\r\n  margin:auto;\r\n  left:0px;\r\n`;\r\nconst StyledCol = styled(Col)`\r\n  position:relative;\r\n  margin:auto;\r\n`;\r\n\r\n\r\nclass DailyPic extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      width : 0,\r\n      height : 0,\r\n      pageDate: (new Date(((new Date()).getFullYear()),((new Date()).getMonth()),(((new Date()).getDate())-1))),\r\n      backgroundEarth:\"Loading Space\",\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.updateWindowDimensions();\r\n    await window.addEventListener('resize', this.updateWindowDimensions);\r\n    let jumboHeader = \"Picture of the Day\";\r\n    let jumboText = \"Check out today's Astronomic Image\";\r\n    await this.props.onChangePage(backgroundDailyPic, jumboDailyPic, jumboHeader, jumboText);\r\n    await this.refreshBackgroundEarth();\r\n  }\r\n  async componentWillUnmount() {\r\n    await window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  async updateWindowDimensions() {\r\n    await this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  async refreshBackgroundEarth(){\r\n    let urlL= \"https://api.nasa.gov/planetary/apod?date=\";\r\n    let urlR= \"&api_key=RhSXKj3CDHOwFcr4h7dZIPnX39GFJR8MUgjYNrKK\";\r\n    let formattedDate = (this.state.pageDate.getFullYear()) + \"-\" + (this.state.pageDate.getMonth()+1) + \"-\"+ (this.state.pageDate.getDate());\r\n    let urlFull = urlL + formattedDate + urlR;\r\n\r\n    let response = await fetch(urlFull);\r\n    this.backgroundEarth = await response.json();\r\n    this.setState({\r\n      backgroundEarth : this.backgroundEarth,\r\n    });\r\n  }\r\n  handleClickLeft = async () =>{\r\n    await this.refreshBackgroundEarth();\r\n    this.setState({\r\n      pageDate: (new Date(this.state.pageDate.getFullYear(),this.state.pageDate.getMonth(),this.state.pageDate.getDate()-1))\r\n    });\r\n    await this.refreshBackgroundEarth();\r\n  }\r\n  handleClickRight = async () => {\r\n    await this.refreshBackgroundEarth();\r\n    this.setState({\r\n      pageDate: (new Date(this.state.pageDate.getFullYear(),this.state.pageDate.getMonth(),this.state.pageDate.getDate()+1))\r\n    });\r\n    await this.refreshBackgroundEarth();\r\n  }\r\n  checkDate(){\r\n    let checkDate = new Date();\r\n    checkDate = (new Date(((new Date()).getFullYear()),((new Date()).getMonth()),(((new Date()).getDate())-1)));\r\n    return ((this.state.pageDate.getDate() === checkDate.getDate()) && (this.state.pageDate.getYear() === checkDate.getYear()) && this.state.pageDate.getMonth() === checkDate.getMonth())\r\n  }\r\n  returnNextDay(pageDate){\r\n     return (new Date(pageDate.getFullYear(), pageDate.getMonth(), pageDate.getDate()+1))\r\n }\r\n\r\n  render(){\r\n    return(\r\n      <Styles widthOfPage = {this.state.width}>\r\n        <Container fluid >\r\n          <Row>\r\n            <h1 className=\"titleText\">{this.state.backgroundEarth.title + \" (\" + (this.returnNextDay(this.state.pageDate).getDate()) + \"/\" + (this.returnNextDay(this.state.pageDate).getMonth()+1) + \"/\"+ (this.returnNextDay(this.state.pageDate).getFullYear()) + \")\"}</h1>\r\n          </Row>\r\n          <Row>\r\n            <StyledCol xl={2} lg={2} md={1} sm={0}>\r\n              <LeftButton onClick={this.handleClickLeft} variant=\"success\">\r\n                <h1 className=\"buttonText\">{\"<\"}</h1>\r\n              </LeftButton>\r\n            </StyledCol>\r\n            <StyledCol xl={8} lg={8} md={10} sm={12}>\r\n              <div className=\"imgContainer\">\r\n                 { (this.state.backgroundEarth.media_type===\"image\") ? (<img src={this.state.backgroundEarth.url} alt={this.state.backgroundEarth.title} className=\"spaceImage\"/>) : (<iframe alt={this.state.backgroundEarth.title} className=\"spaceImage\" src={this.state.backgroundEarth.url}></iframe>)}\r\n              </div>\r\n            </StyledCol>\r\n            <StyledCol xl={2} lg={2} md={1} sm={0}>\r\n              <RightButton onClick={this.handleClickRight} variant=\"success\" disabled={this.checkDate()}>\r\n                <h1 className=\"buttonText\">{\">\"}</h1>\r\n              </RightButton>\r\n            </StyledCol>\r\n          </Row>\r\n          <Row>\r\n            <p className=\"paragraphText\">{this.state.backgroundEarth.explanation}</p>\r\n          </Row>\r\n        </Container>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\nexport default DailyPic;\r\n","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\Home.js",[],"C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\Mars.js",["54","55","56","57","58","59","60","61","62","63","64"],"import React,{useCallback} from 'react';\r\nimport {Card, Button, Container, Col, Row} from 'react-bootstrap';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport BackgroundMars from './assets/backgroundMars.jpg';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport EmptyMarsImage from \"./assets/brownBackground.jpg\";\r\nimport Error from \"./assets/ErrorMars.png\";\r\nimport Curiosity from \"./assets/Curiosity.jpg\";\r\nimport jumboNaturalEvents from './assets/jumboMars.png';\r\nimport backgroundNaturalEvents from './assets/brownBackground.jpg';\r\nimport Loading from './assets/Loading.png';\r\n\r\nconst Styles = styled.div`\r\n  padding:0;\r\n  border:0;\r\n  position:relative;\r\n\r\n  .weatherContainer {\r\n    background: url(${BackgroundMars}) no-repeat;\r\n    background-size: cover;\r\n    bottom:0px;\r\n    margin-bottom:30px;\r\n    min-width: 100%;\r\n    max-width:100%;\r\n    max-height:100%;\r\n    min-height:100%;\r\n  }\r\n  .curiosityImage{\r\n    position:relative;\r\n    margin:auto;\r\n    display: block;\r\n    height: 550px;\r\n    width: 700px;\r\n  }\r\n  .weatherImage {\r\n  display: block;\r\n\r\n  max-height:300px;\r\n  max-width:300px;\r\n\r\n  margin-left:auto;\r\n  margin-right:auto;\r\n  margin-bottom:auto;\r\n  margin-top:15px;\r\n\r\n  }\r\n  .titleText {\r\n    position: relative;\r\n    margin:auto;\r\n    color:#d3d3d3;\r\n    margin-bottom:0px;\r\n    text-align:center;\r\n    font-size:25px;\r\n    font-weight:450;\r\n    text-decoration: underline;\r\n  }\r\n  .cardType{\r\n    font-weight:bolder;\r\n    text-decoration:underline;\r\n  }\r\n  .cardAverage{\r\n    font-weight:1;\r\n    font-size: 44px;\r\n  }\r\n  .cardCount{\r\n    font-size: 8px;\r\n    font-style: italic;\r\n  }\r\n  .marsImage{\r\n    margin-left: 125px;\r\n    margin-right: 125px;\r\n  }\r\n .imgContainer {\r\n   position: relative;\r\n   margin: auto;\r\n   margin-bottom: 25px;\r\n   overflow: hidden;\r\n }\r\n .leftText{\r\n    position: relative;\r\n    text-align:right;\r\n    margin:auto;\r\n    font-size:45px;\r\n    color:#A9A9A9;\r\n }\r\n .rightText{\r\n    position: relative;\r\n    text-align:left;\r\n    margin:auto;\r\n    margin-top:7px;\r\n    font-size:40px;\r\n    color:#A9A9A9;\r\n    font-weight:200;\r\n }\r\n`;\r\nconst StyledCol = styled(Col)`\r\n  position:relative;\r\n  margin:0;\r\n`;\r\nconst StyledCard = styled(Card)`\r\n  position:relative;\r\n  width:${props => (((props.windowWidth/6))+\"px\")};\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-width: 0px;\r\n  color:rgb(255,245,238);\r\n  margin-top:10px;\r\n  text-align:center;\r\n  padding-bottom:px;\r\n`;\r\nconst TitleCol = styled(Col)`\r\n  position:relative;\r\n  margin:0;\r\n  text-align:center;\r\n  margin-top:15px;\r\n  margin-bottom:0px;\r\n`;\r\nconst TextCol = styled(Col)`\r\n  position:relative;\r\n  margin:auto;\r\n  margin-top:0px;\r\n`;\r\nconst RoverHelpButton = styled(Button)`\r\n   position: relative;\r\n   margin:auto;\r\n   margin-left:0px;\r\n   color:#A9A9A9;\r\n   padding:0px;\r\n   padding-left:5px;\r\n   padding-right:5px;\r\n   background-color:#000000;\r\n   font-size:10px;\r\n   font-weight:200;\r\n`;\r\n\r\n\r\nclass Mars extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      width : 0,\r\n      height : 0,\r\n      yesterday: (new Date(((new Date()).getFullYear()),((new Date()).getMonth()),(((new Date()).getDate())-7))),\r\n\r\n      dataWeather: \"Loading Weather Data\",\r\n\r\n      cameraArray:[\"FHAZ\", \"RHAZ\", \"MAST\", \"CHEMCAM\", \"MAHLI\", \"MARDI\", \"NAVCAM\"],\r\n      dataCamera: [\"loading Data\", \"loading Data\", \"loading Data\", \"loading Data\", \"loading Data\", \"loading Data\", \"loading Data\"],\r\n      currPhotoNum: [0,0,0,0,0,0,0],\r\n      totalPhotoNum: [0,0,0,0,0,0,0],\r\n      galleryImage: [[{src: Loading, width: 1, height: 1}],[{src: EmptyMarsImage, width: 1, height: 1}],[{src: EmptyMarsImage, width: 1, height: 1}],[{src: EmptyMarsImage, width: 1, height: 1}]],\r\n      totalPhotosTaken: \"Loading\",\r\n      roverHelpButtonClicked:false,\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.updateWindowDimensions();\r\n    await window.addEventListener('resize', this.updateWindowDimensions);\r\n    let jumboHeader = \"The Red Planet\";\r\n    let jumboText = \"Find out today's weather & photos of Mars\";\r\n    await this.props.onChangePage(backgroundNaturalEvents, jumboNaturalEvents, jumboHeader, jumboText);\r\n\r\n    let urlWeather = \"https://api.nasa.gov/insight_weather/?api_key=Tk2oVQALMndvKdMKB6ToE6YIddcS3qBnedrfwVL4&feedtype=json&ver=1.0\";\r\n    let responseWeather = await fetch(urlWeather);\r\n    this.dataWeather = await responseWeather.json();\r\n\r\n    let leftUrlCamera = \"https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=\";\r\n    let rightUrlCamera = \"&api_key=PQ1YEa7YzQtsYTGyynEFVOQSmxdIDFCMNW8IMCRj&feedtype=json&ver=1.0\";\r\n    let formattedDate = (this.state.yesterday.getFullYear()) + \"-\" + (this.state.yesterday.getMonth()+1) + \"-\"+ (this.state.yesterday.getDate());\r\n    formattedDate=\"2020-02-02\"\r\n    this.dataCamera = [];\r\n    this.totalPhotoNum = [];\r\n    for(let i = 0; i < 7; i++){\r\n      let responseCamera = await fetch(leftUrlCamera + formattedDate +\"&camera=\" + this.state.cameraArray[i] + rightUrlCamera);\r\n      let jsonCamera = await responseCamera.json();\r\n      this.dataCamera[i] = await jsonCamera;\r\n      this.totalPhotoNum[i] = await jsonCamera.photos.length;\r\n    };\r\n\r\n     let urlNumPhotos = \"https://api.nasa.gov/mars-photos/api/v1/manifests/Curiosity?&api_key=MfHQYVpalCpvawhEUdjsedukFCwE7PMa9WNNvHWk\";\r\n     let responseNumPhotos = await fetch(urlNumPhotos);\r\n     let numPhotosJson = await responseNumPhotos.json();\r\n     this.totalPhotosTaken = numPhotosJson.photo_manifest.total_photos;\r\n\r\n    await this.setState({\r\n      dataWeather : this.dataWeather,\r\n      dataCamera : this.dataCamera,\r\n      totalPhotoNum : this.totalPhotoNum,\r\n      totalPhotosTaken: this.totalPhotosTaken,\r\n    });\r\n    this.initializePhotos();\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    await window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  async updateWindowDimensions() {\r\n    await this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  weatherCard(cardName){\r\n      let uniqueReturn = [];\r\n      let apiData = 0;\r\n      try{\r\n         apiData = this.state.dataWeather[this.state.dataWeather.sol_keys[0]];\r\n         if(cardName===\"Temperature\"){\r\n           uniqueReturn.push(<span className=\"cardAverage\">{(1.8*apiData.AT.av +32).toFixed(1) + \"°F\"}</span>);\r\n           uniqueReturn.push(<br  style={{marginBottom:\"18px\"}}/>);\r\n           uniqueReturn.push(\"Min: \" + (1.8*apiData.AT.mn +32).toFixed(1));\r\n           uniqueReturn.push(<br/>);\r\n           uniqueReturn.push(\"Max: \" + (1.8*apiData.AT.mx +32).toFixed(1));\r\n           uniqueReturn.push(<br style={{marginBottom:\"12px\"}}/>);\r\n           uniqueReturn.push(<span className=\"cardCount\">{\"Counted \" + apiData.AT.ct + \" times\"}</span>);\r\n         }else if(cardName===\"Wind Speed\"){\r\n           uniqueReturn.push(<span className=\"cardAverage\">{apiData.HWS.av.toFixed(1) + \" m/s\"}</span>);\r\n           uniqueReturn.push(<br  style={{marginBottom:\"18px\"}}/>);\r\n           uniqueReturn.push(\"Min: \" + apiData.HWS.mn.toFixed(1));\r\n           uniqueReturn.push(<br/>);\r\n           uniqueReturn.push(\"Max: \" + apiData.HWS.mx.toFixed(1));\r\n           uniqueReturn.push(<br style={{marginBottom:\"12px\"}}/>);\r\n           uniqueReturn.push(<span className=\"cardCount\">{\"Counted \" + apiData.HWS.ct + \" times\"}</span>);\r\n         }else if(cardName===\"Atmospheric Pressure\"){\r\n           uniqueReturn.push(<span className=\"cardAverage\">{apiData.PRE.av.toFixed(1) + \" Pa\"}</span>);\r\n           uniqueReturn.push(<br  style={{marginBottom:\"18px\"}}/>);\r\n           uniqueReturn.push(\"Min: \" + apiData.PRE.mn.toFixed(1));\r\n           uniqueReturn.push(<br/>);\r\n           uniqueReturn.push(\"Max: \" + apiData.PRE.mx.toFixed(1));\r\n           uniqueReturn.push(<br style={{marginBottom:\"12px\"}}/>);\r\n           uniqueReturn.push(<span className=\"cardCount\">{\"Counted \" + apiData.PRE.ct + \" times\"}</span>);\r\n         }else if(cardName===\"Wind Direction\"){\r\n           uniqueReturn.push(<span className=\"cardAverage\">{apiData.WD.most_common.compass_degrees.toFixed(1) + \"°\"}</span>);\r\n           uniqueReturn.push(<br  style={{marginBottom:\"18px\"}}/>);\r\n           let firstDirection = this.checkDirection(apiData.WD.most_common.compass_point[0]);\r\n           let secondDirection = this.checkDirection(apiData.WD.most_common.compass_point[1]);\r\n           let thirdDirection = this.checkDirection(apiData.WD.most_common.compass_point[2]);\r\n           uniqueReturn.push(firstDirection + \"-\" + secondDirection + thirdDirection.toLowerCase());\r\n           uniqueReturn.push(<br/>);\r\n           uniqueReturn.push(<br style={{marginBottom:\"12px\"}}/>);\r\n           uniqueReturn.push(<span className=\"cardCount\">{\"Counted \" + apiData.WD.most_common.ct + \" times\"}</span>);\r\n         }else if(cardName===\"Season\"){\r\n           uniqueReturn.push(<br style={{marginBottom:\"18px\"}}/>);\r\n           uniqueReturn.push(<span className=\"cardAverage\">{apiData.Season[0].toUpperCase() + apiData.Season.substring(1)}</span>);\r\n           uniqueReturn.push(<br style={{marginBottom:\"12px\"}}/>);\r\n           uniqueReturn.push(<br/>);\r\n           uniqueReturn.push(<span className=\"cardCount\" style={{color:\"rgba(0,0,0,0)\"}}>{\"Counted  times\"}</span>);\r\n         }\r\n      }\r\n      catch(Exception){\r\n        uniqueReturn.push(<span className=\"cardAverage\">{(apiData==0) ? \"Loading\": \"N/A\"}</span>);\r\n        uniqueReturn.push(<br  style={{marginBottom:\"18px\"}}/>);\r\n        uniqueReturn.push(\"Min: \" + ((apiData==0) ? \"Loading\": \"N/A\"));\r\n        uniqueReturn.push(<br/>);\r\n        uniqueReturn.push(\"Max: \" + ((apiData==0) ? \"Loading\": \"N/A\"));\r\n        uniqueReturn.push(<br style={{marginBottom:\"12px\"}}/>);\r\n        uniqueReturn.push(<span className=\"cardCount\">{\"Counted: \" + ((apiData==0) ? \"Loading\": \"N/A\")}</span>);\r\n      }\r\n\r\n      let returnedValue =\r\n        <StyledCol><StyledCard windowWidth = {this.state.width}><Card.Body>\r\n          <span className=\"cardType\">\r\n            {cardName}\r\n          </span>\r\n          <br/>\r\n          {uniqueReturn}\r\n        </Card.Body></StyledCard></StyledCol>;\r\n      return returnedValue;\r\n  }\r\n  checkDirection(direction){\r\n    if(direction.toLowerCase() === \"w\")\r\n      direction = \"West\";\r\n    if(direction.toLowerCase() === \"n\")\r\n      direction = \"North\";\r\n    if(direction.toLowerCase() === \"e\")\r\n      direction = \"East\";\r\n    if(direction.toLowerCase() === \"s\")\r\n      direction = \"South\";\r\n    return direction;\r\n  }\r\n\r\n   printHeaders(rowNum){\r\n      let returnedObject = [];\r\n      let currRowNum = 0;\r\n      let currRowElement = 0;\r\n\r\n      for(let i = 0; i < 7; i++){\r\n         if(this.state.totalPhotoNum[i] != 0){\r\n            if(currRowNum === rowNum){\r\n               returnedObject.push(\r\n                  <TitleCol>\r\n                     <h1 className=\"titleText\">{this.state.dataCamera[i].photos[this.state.currPhotoNum[i]].camera.full_name + \" (\" + (this.state.currPhotoNum[i]+1) + \"/\" + this.state.totalPhotoNum[i] + \")\"}</h1>\r\n                  </TitleCol>\r\n               );\r\n            }\r\n            if(1 === currRowElement){\r\n               currRowNum++;\r\n               currRowElement = 0;\r\n            }\r\n            else\r\n               currRowElement++;\r\n         }\r\n      }\r\n      if((this.state.galleryImage[rowNum][this.state.galleryImage[rowNum].length-1] !== undefined) && (this.state.galleryImage[rowNum][this.state.galleryImage[rowNum].length-1].src === EmptyMarsImage)){\r\n         returnedObject.push(\r\n            <TitleCol>\r\n               <h1 className=\"titleText\"></h1>\r\n            </TitleCol>\r\n         );\r\n      }\r\n      return returnedObject;\r\n   }\r\n\r\n  handleClickPic = async (event1,object) =>{\r\n    let offset = 0;\r\n    let tempcurrPhotoNum = this.state.currPhotoNum;\r\n    for(let i = 0; i < this.state.galleryImage.length; i++){\r\n      for(let j = 0; j < this.state.galleryImage[i].length; j++){\r\n        try{\r\n          while(this.state.totalPhotoNum[2*i+j+offset] == 0)\r\n            offset++;\r\n          if(object.photo === this.state.galleryImage[i][j]){\r\n            if(this.state.totalPhotoNum[i*2+j+offset] === (this.state.currPhotoNum[i*2+j+offset] + 1))\r\n              tempcurrPhotoNum[i*2+j+offset] = 0;\r\n            else\r\n              tempcurrPhotoNum[i*2+j+offset] = this.state.currPhotoNum[i*2+j+offset]+1;\r\n          }\r\n        }\r\n        catch(Exception){\r\n        }\r\n      }\r\n    }\r\n    await this.setState({currPhotoNum:tempcurrPhotoNum});\r\n    await this.initializePhotos();\r\n  }\r\n\r\n  async initializePhotos(){\r\n    try{\r\n      let tempImage = [];\r\n      for(let i = 0; i < 7; i++){\r\n        if(this.state.totalPhotoNum[i] != 0)\r\n          tempImage.push({src:this.state.dataCamera[i].photos[this.state.currPhotoNum[i]].img_src,width:1,height:1,alt:this.state.cameraArray[i]});\r\n      }\r\n      this.galleryImage = [[],[],[],[]];\r\n      for(let i = 0; i < tempImage.length; i++){\r\n        this.galleryImage[Math.floor(i/2)].push(tempImage[i]);\r\n      }\r\n      for(let i=0; i<this.galleryImage.length; i++){\r\n         if(this.galleryImage[i].length == 1 )\r\n           this.galleryImage[i].push({src:EmptyMarsImage,width:1,height:1});\r\n      }\r\n      await this.setState({galleryImage : this.galleryImage});\r\n    }\r\n    catch(Exception){\r\n      return \"Loading Mars Rover Images\";\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Styles>\r\n        <Container fluid>\r\n           <div className=\"weatherContainer\">\r\n              <Row>\r\n                  {this.weatherCard(\"Temperature\")}\r\n                  {this.weatherCard(\"Wind Speed\")}\r\n                  {this.weatherCard(\"Atmospheric Pressure\")}\r\n                  {this.weatherCard(\"Wind Direction\")}\r\n                  {this.weatherCard(\"Season\")}\r\n              </Row>\r\n           </div>\r\n           <div className=\"curiosityInfo\">\r\n              <Row>\r\n                 <Col>\r\n                    <Row>\r\n                       <TextCol lg={5}>\r\n                          <h1 className=\"leftText\"> {\"Name: \"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={7}>\r\n                          <h1 className=\"rightText\"> {\"Curiosity\"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={5}>\r\n                          <h1 className=\"leftText\"> {\"Landing Date: \"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={7}>\r\n                          <h1 className=\"rightText\"> 6<sup>th</sup> August, 2012 </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={5}>\r\n                          <h1 className=\"leftText\"> {\"Status: \"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={7}>\r\n                          <h1 className=\"rightText\"> {\"Active\"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={5}>\r\n                          <h1 className=\"leftText\"> {\"Photos Taken: \"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={7}>\r\n                          <h1 className=\"rightText\"> {this.state.totalPhotosTaken} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={5}>\r\n                          <h1 className=\"leftText\"> {\"Objectives: \"} </h1>\r\n                       </TextCol>\r\n                       <TextCol lg={7}>\r\n                          <h1 className=\"rightText\" style={{fontSize:\"30px\"}}> {\"-Investigation of the Martian climate and geology\"} </h1>\r\n                          <h1 className=\"rightText\" style={{fontSize:\"30px\"}}> {\"-Assessment of whether Mars has ever offered environmental conditions favorable for microbial life\"} </h1>\r\n                          <h1 className=\"rightText\" style={{fontSize:\"30px\"}}> {\"-Planetary habitability studies in preparation for human exploration.\"} </h1>\r\n                       </TextCol>\r\n                    </Row>\r\n                 </Col>\r\n                 <Col>\r\n                    <div className=\"imgContainer\">\r\n                        <img className=\"curiosityImage\" src={Curiosity} alt={\"TEMPORARY\"}/>\r\n                    </div>\r\n                 </Col>\r\n              </Row>\r\n           </div>\r\n           <div>\r\n           <Row style={{ marginBottom:\"50px\", marginTop:\"40px\"}}>\r\n              <h1 className={\"leftText\"}style={{marginLeft:\"75px\", marginRight:\"0px\", textAlign:\"left\", textDecoration:\"underline\"}}> {\"Photos Taken by Curiosity\"} </h1>\r\n              <RoverHelpButton onClick={() => this.setState({roverHelpButtonClicked:!this.state.roverHelpButtonClicked})}> {this.state.roverHelpButtonClicked ? \"Click on the images to traverse through them\" : \"?\"} </RoverHelpButton>\r\n           </Row>\r\n           </div>\r\n           <div className = \"marsImage\">\r\n             <Row>\r\n               {this.printHeaders(0)}\r\n             </Row>\r\n             <Gallery onClick={this.handleClickPic} margin={7} photos={(this.state.galleryImage[0].length!=0) ? this.state.galleryImage[0] : [{src: Error, width: 1, height: 1}]}/>\r\n             <Row>\r\n               {this.printHeaders(1)}\r\n             </Row>\r\n             <Gallery onClick={this.handleClickPic} margin={7} photos={this.state.galleryImage[1]}/>\r\n             <Row>\r\n               {this.printHeaders(2)}\r\n             </Row>\r\n             <Gallery onClick={this.handleClickPic} margin={7} photos={this.state.galleryImage[2]}/>\r\n             <Row style={{marginBottom:\"50px\"}}>\r\n               {this.printHeaders(3)}\r\n             </Row>\r\n             <Gallery onClick={this.handleClickPic} margin={7} photos={this.state.galleryImage[3]}/>\r\n           </div>\r\n        </Container>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\nexport default Mars;\r\n","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\NoMatch.js",[],"C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\NaturalEvents.js",["65"],"//[LONGITUDE, LATITUDE] FOR ALL NASA STUFF\r\n//(YYYY-MM-DD) FOR ALL NASA STUFF\r\n\r\nimport React from 'react';\r\nimport {Button, Container, Col, Row, Dropdown} from 'react-bootstrap';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport Error from './assets/Error.png';\r\nimport {Typography, Slider} from '@material-ui/core';\r\nimport Loading from './assets/Loading.png';\r\nimport jumboNaturalEvents from './assets/jumboNaturalEvents.jpg';\r\nimport backgroundNaturalEvents from './assets/purpleBackground.jpg';\r\n\r\nconst Styles = styled.div`\r\n  .imgContainer {\r\n    position: relative;\r\n    margin: auto;\r\n    margin-bottom: 25px;\r\n    overflow: hidden;\r\n  }\r\n  .satelliteImage {\r\n    position:relative;\r\n    margin:auto;\r\n    display: block;\r\n    height: 550px;\r\n    width: 550px;\r\n  }\r\n  .dropdownButton {\r\n    background-color:#000000;\r\n    color:A9A9A9;\r\n  }\r\n  .sliderText {\r\n    position: relative;\r\n    margin:auto;\r\n    color:#A9A9A9;\r\n    text-align:center;\r\n    font-size:24px;\r\n  }\r\n  .categoryTitle {\r\n    position: relative;\r\n    margin:auto;\r\n    color:#A9A9A9;\r\n    text-align:center;\r\n    font-size:30px;\r\n    font-weight:700;\r\n    text-decoration: underline;\r\n  }\r\n  .categoryPara {\r\n    position: relative;\r\n    margin:auto;\r\n    color:#A9A9A9;\r\n    text-align:center;\r\n    font-size:15px;\r\n    margin-top:8px;\r\n    font-weight:100;\r\n  }\r\n  .leftText{\r\n     position: relative;\r\n     text-align:right;\r\n     margin:auto;\r\n     font-size:45px;\r\n     color:#A9A9A9;\r\n  }\r\n  .rightText{\r\n     position: relative;\r\n     text-align:left;\r\n     margin:auto;\r\n     font-size:40px;\r\n     color:#A9A9A9;\r\n     font-weight:200;\r\n  }\r\n`;\r\nconst StyledCol = styled(Col)`\r\n  position:relative;\r\n  margin:auto;\r\n`;\r\nconst StyledDropdown = styled(Dropdown)`\r\n  position:relative;\r\n  margin:20px;\r\n  margin-right:0px;\r\n`;\r\nconst StyledSlider = styled(Slider)`\r\n  position:relative;\r\n  margin:auto;\r\n  margin-top:3px;\r\n`;\r\nconst SliderCol = styled(Col)`\r\n  position:relative;\r\n  margin:auto;\r\n  padding-left:10px;\r\n`;\r\nconst TextCol = styled(Col)`\r\n  position:relative;\r\n  margin:auto;\r\n  padding:3px;\r\n`;\r\nconst TextRow = styled(Row)`\r\n  position:relative;\r\n  margin:auto;\r\n  margin-top:100px;\r\n`;\r\nconst FocusButton = styled(Button)`\r\n   position: relative;\r\n   text-align:right;\r\n   margin:auto;\r\n   color:#A9A9A9;\r\n   padding:0px;\r\n   padding-left:5px;\r\n   padding-right:5px;\r\n   background-color:#000000;\r\n   font-size:10px;\r\n   font-weight:200;\r\n`;\r\n\r\nclass NaturalEvent extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      closedCategoryJson:{title:\"\", description:\"\", link:\"\",events:[{id:\"\", title:\"\",description:\"\", link:\"\", closed:\"\", categories:[{id:\"\", title:\"\"}], sources:[{id:\"\", url:\"\"}], geometry:[{magnitudeValue:\"\", magnitudeUnit:\"\", date:\"\", type:\"\", coordinates:[0,0]}]}]},\r\n      closedEventCounter: 0,\r\n      closedDim: 0.15,\r\n      closedImageUrl: Loading,\r\n      loading:true,\r\n      currPageNum:0,\r\n      focusButtonClicked:false,\r\n\r\n      closedDate:\"\",\r\n      closedLongitude:\"\",\r\n      closedLatitude:\"\",\r\n      title:\"\",\r\n      id:\"ID\",\r\n      eventDescription:\"\",\r\n      categoryDescription:\"\",\r\n      categoryName:\"\",\r\n      source:\"\",\r\n      magnitudeValue:\"\",\r\n      magnitudeUnit:\"\",\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.updateWindowDimensions();\r\n    await window.addEventListener('resize', this.updateWindowDimensions);\r\n    let jumboHeader = \"Landsat Imagery\";\r\n    let jumboText = \"Have a look at various Natural Events\";\r\n    await this.props.onChangePage(backgroundNaturalEvents, jumboNaturalEvents, jumboHeader, jumboText);\r\n    await this.updateCategory(\"volcanoes\");\r\n    await this.updateEvent(4);\r\n  }\r\n  async componentWillUnmount() {\r\n    await window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  async updateWindowDimensions() {\r\n    await this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  async updateCategory(categoryName){\r\n     await this.setState({loading:true});\r\n    let closedImageUrl= \"https://eonet.sci.gsfc.nasa.gov/api/v3/categories/\" + categoryName + \"?status=closed\";\r\n    let closedResponse = await fetch(closedImageUrl);\r\n    this.closedCategoryJson = await closedResponse.json();\r\n    this.categoryDescription = this.closedCategoryJson.description;\r\n    this.categoryName = this.closedCategoryJson.title;\r\n    await this.setState({\r\n       closedCategoryJson:this.closedCategoryJson,\r\n       categoryDescription:this.categoryDescription,\r\n       categoryName:this.categoryName,\r\n    });\r\n    await this.updateEvent(0);\r\n  }\r\n\r\n  async updateEvent(closedEventCounter){\r\n     await this.setState({loading:true});\r\n     let closeI = -1;\r\n     let closedDate = \"\";\r\n     let closedLongitude = \"\";\r\n     let closedLatitude = \"\";\r\n     this.closedImageUrl = Error;\r\n     if(this.state.closedCategoryJson.events.length !== 0){\r\n        closedDate = this.state.closedCategoryJson.events[closedEventCounter].geometry[0].date.split(\"T\")[0];\r\n        closedLongitude = this.state.closedCategoryJson.events[closedEventCounter].geometry[0].coordinates;\r\n        while((typeof closedLongitude[0]) == \"object\"){\r\n           closedLongitude = closedLongitude[0];\r\n        }\r\n        closedLatitude = Number.parseFloat(closedLongitude[1]).toFixed(2).toString();\r\n        closedLongitude = Number.parseFloat(closedLongitude[0]).toFixed(2).toString();\r\n\r\n        this.closedImageUrl = \"https://api.nasa.gov/planetary/earth/imagery?lon=\" + closedLongitude + \"&lat=\" + closedLatitude + \"&date=\" +  closedDate + \"&dim=\" + this.state.closedDim + \"&api_key=LZsXbiDOXjh2IO9F9PxdPqQ9HCubyYhhIpEzmpqo\";\r\n        let closedResponse = await fetch(this.closedImageUrl);\r\n        let flag = (closedResponse.ok === false);\r\n        while(flag === true){\r\n           closeI++;\r\n           if(closeI%4 === 0)\r\n             this.closedImageUrl = \"https://api.nasa.gov/planetary/earth/imagery?lon=\" + (parseInt(closedLongitude) + 2*(Math.floor(closeI/4) + 1)) + \"&lat=\" + (closedLatitude) + \"&date=\" +  closedDate + \"&dim=\" + this.state.closedDim + \"&api_key=elL4eZjJSJsCrpWiLRjfve51JzsinKLBv83TcRLS\";\r\n           else if(closeI%4 === 1)\r\n              this.closedImageUrl = \"https://api.nasa.gov/planetary/earth/imagery?lon=\" + (closedLongitude) + \"&lat=\" + (parseInt(closedLatitude) + 2*(Math.floor(closeI/4) + 1)) + \"&date=\" +  closedDate + \"&dim=\" + this.state.closedDim + \"&api_key=hYhjvv4t46wNXLEUvBkncT1MhSIuMde3QFreFLe4\";\r\n           else if(closeI%4 === 2)\r\n              this.closedImageUrl = \"https://api.nasa.gov/planetary/earth/imagery?lon=\" + (parseInt(closedLongitude) - 2*(Math.floor(closeI/4) + 1)) + \"&lat=\" + (closedLatitude) + \"&date=\" +  closedDate + \"&dim=\" + this.state.closedDim + \"&api_key=K5j4hZf1NgDvwSQ6gc9ZnzZHz3dcaSaE3HmUpJf7\";\r\n           else\r\n              this.closedImageUrl = \"https://api.nasa.gov/planetary/earth/imagery?lon=\" + (closedLongitude) + \"&lat=\" + (parseInt(closedLatitude) - 2*(Math.floor(closeI/4) + 1)) + \"&date=\" +  closedDate + \"&dim=\" + this.state.closedDim + \"&api_key=igdYVlUQXL7InD5PeyxW4p73DAVCASPEKlwcaayF\";\r\n\r\n           if(closeI === 12 - 1)\r\n             this.closedImageUrl = Error;\r\n           closedResponse = await fetch(this.closedImageUrl);\r\n           flag = ((closedResponse.ok === false)||(closeI === 12 - 1));\r\n        }\r\n     }\r\n     this.title = this.state.closedCategoryJson.events[closedEventCounter].title;\r\n     this.id = this.state.closedCategoryJson.events[closedEventCounter].id;\r\n     this.source = this.state.closedCategoryJson.events[closedEventCounter].sources[0].id;\r\n     this.eventDescription = this.state.closedCategoryJson.events[closedEventCounter].eventDescription;\r\n     if((this.eventDescription === null) || (this.eventDescription === undefined))\r\n        this.eventDescription = \"Not Provided\";\r\n     this.magnitudeValue = this.state.closedCategoryJson.events[closedEventCounter].geometry[0].magnitudeValue;\r\n     this.magnitudeUnit = this.state.closedCategoryJson.events[closedEventCounter].geometry[0].magnitudeUnit;\r\n     if((this.magnitudeValue === null) || (this.magnitudeValue === undefined)){\r\n        this.magnitudeValue = \"Not Provided\";\r\n        this.magnitudeUnit = \"\";\r\n     } else{\r\n        this.magnitudeValue = Number.parseFloat(this.magnitudeUnit).toFixed(2).toString();\r\n     }\r\n\r\n     await this.setState({\r\n         closedImageUrl : this.closedImageUrl,\r\n         closedEventCounter: closedEventCounter,\r\n         closedDim: 0.15,\r\n         loading: false,\r\n         currPageNum: 0,\r\n         focusButtonClicked:false,\r\n\r\n         closedDate:closedDate,\r\n         closedLongitude:closedLongitude,\r\n         closedLatitude:closedLatitude,\r\n         title:this.title,\r\n         id:this.id,\r\n         eventDescription:this.eventDescription,\r\n         source:this.source,\r\n         magnitudeValue:this.magnitudeValue,\r\n         magnitudeUnit:this.magnitudeUnit,\r\n     });\r\n  }\r\n\r\n  async updateDim(value){\r\n     await this.setState({loading:true});\r\n     let leftUrl = this.state.closedImageUrl.split(\"&dim=\");\r\n     let rightUrl = leftUrl[1].split(\"&api_key=\");\r\n     this.closedImageUrl = leftUrl[0] + \"&dim=\" + value + \"&api_key=\" + rightUrl[1];\r\n     await this.setState({\r\n         closedImageUrl : this.closedImageUrl,\r\n         loading : false,\r\n     });\r\n }\r\n\r\n  printDropdownEvents(){\r\n     let returnedObject = [];\r\n     let loopNum = 11;\r\n     this.currPageNum = this.state.currPageNum;\r\n     if(loopNum > (this.state.closedCategoryJson.events.length - loopNum*this.currPageNum))\r\n       loopNum = (this.state.closedCategoryJson.events.length - loopNum*this.currPageNum);\r\n     if(this.currPageNum !== 0)\r\n       returnedObject.push(<Dropdown.Item onClick={async () => await this.setState({currPageNum:this.currPageNum-1})}>{\"[<--] Prev Page\"}</Dropdown.Item>);\r\n     for(let i=0; i<loopNum; i++)\r\n        returnedObject.push(<Dropdown.Item onClick={() => this.updateEvent(i+11*this.currPageNum)}>{this.state.closedCategoryJson.events[i+11*this.currPageNum].title}</Dropdown.Item>);\r\n     if(this.state.closedCategoryJson.events.length > 11*(this.currPageNum+1))\r\n        returnedObject.push(<Dropdown.Item onClick={async () => await this.setState({currPageNum:this.currPageNum+1})}>{\"[-->] Next Page\"}</Dropdown.Item>);\r\n     return returnedObject;\r\n  }\r\n\r\n  printDropdownCategories(){\r\n     let returnedObject = [\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"volcanoes\")}>Volcanoes</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"drought\")}>Drought</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"dustHaze\")}>Dust and Haze</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"earthquakes\")}>Earthquakes</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"floods\")}>Floods</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"landslides\")}>Landslides</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"manmade\")}>Man-made</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"seaLakeIce\")}>Sea and Lake Ice</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"severeStorms\")}>Severe Storms</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"snow\")}>Snow</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"tempExtremes\")}>Temperature Extremes</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"waterColor\")}>Water Color</Dropdown.Item>,\r\n        <Dropdown.Item onClick={() => this.updateCategory(\"wildfires\")}>Wildfires</Dropdown.Item>\r\n     ];\r\n     return returnedObject;\r\n }\r\n\r\n  render(){\r\n    return(\r\n      <Styles widthOfPage = {this.state.width}>\r\n      <Container fluid >\r\n         <Row>\r\n            <StyledCol lg={2}>\r\n               <StyledDropdown>\r\n                 <Dropdown.Toggle className=\"dropdownButton\" id=\"dropdown-basic\" disabled={this.state.loading}>\r\n                   Categories\r\n                 </Dropdown.Toggle>\r\n                 <Dropdown.Menu>\r\n                     {this.printDropdownCategories()}\r\n                 </Dropdown.Menu>\r\n               </StyledDropdown>\r\n               <StyledDropdown>\r\n                 <Dropdown.Toggle className=\"dropdownButton\" id=\"dropdown-basic\" disabled={this.state.loading}>\r\n                   Events\r\n                 </Dropdown.Toggle>\r\n                 <Dropdown.Menu>\r\n                     {this.printDropdownEvents()}\r\n                 </Dropdown.Menu>\r\n               </StyledDropdown>\r\n            </StyledCol>\r\n            <SliderCol lg={4}>\r\n               <Row>\r\n                  <TextCol>\r\n                     <h1 className={\"leftText\"}> {\"Focus\"} </h1>\r\n                  </TextCol>\r\n                  <TextCol style={{marginTop:\"0px\"}}>\r\n                     <FocusButton onClick={() => this.setState({focusButtonClicked:!this.state.focusButtonClicked})}> {this.state.focusButtonClicked ? \"Use this slider if only a fraction of the image is visible.\\n(Default value: 0.15)\" : \"?\"} </FocusButton>\r\n                  </TextCol>\r\n               </Row>\r\n               <Row>\r\n                  <StyledSlider\r\n                     disabled={this.state.loading}\r\n                     defaultValue={this.state.closedDim}\r\n                     aria-labelledby=\"discrete-slider-small-steps\"\r\n                     step={0.05}\r\n                     onChangeCommitted={(e,val) => this.updateDim(val)}\r\n                     marks\r\n                     min={0.05}\r\n                     max={0.75}\r\n                     valueLabelDisplay=\"auto\"\r\n                  />\r\n               </Row>\r\n            </SliderCol>\r\n            <StyledCol lg={6}>\r\n               <Row>\r\n                  <h1 className=\"categoryTitle\"> {this.state.categoryName} </h1>\r\n               </Row>\r\n               <Row>\r\n                  <h1 className=\"categoryPara\"> {this.state.categoryDescription} </h1>\r\n               </Row>\r\n            </StyledCol>\r\n         </Row>\r\n         <Row>\r\n            <Col>\r\n               <TextRow>\r\n                  <TextCol lg={5}>\r\n                     <h1 className=\"leftText\"> {this.state.id + \": \"} </h1>\r\n                  </TextCol>\r\n                  <TextCol lg={7}>\r\n                     <h1 className=\"rightText\"> {this.state.title} </h1>\r\n                  </TextCol>\r\n               </TextRow>\r\n               <Row>\r\n                  <TextCol lg={5}>\r\n                     <h1 className=\"leftText\"> {\"Description: \"} </h1>\r\n                  </TextCol>\r\n                  <TextCol lg={7}>\r\n                     <h1 className=\"rightText\"> {this.state.eventDescription} </h1>\r\n                  </TextCol>\r\n               </Row>\r\n               <Row>\r\n                  <TextCol lg={5}>\r\n                     <h1 className=\"leftText\"> {\"Source: \"} </h1>\r\n                  </TextCol>\r\n                  <TextCol lg={7}>\r\n                     <h1 className=\"rightText\"> {this.state.source} </h1>\r\n                  </TextCol>\r\n               </Row>\r\n               <Row>\r\n                  <TextCol lg={5}>\r\n                     <h1 className=\"leftText\"> {\"Magnitude: \"} </h1>\r\n                  </TextCol>\r\n                  <TextCol lg={7}>\r\n                     <h1 className=\"rightText\"> {this.state.magnitudeValue + \" \" + this.state.magnitudeUnit} </h1>\r\n                  </TextCol>\r\n               </Row>\r\n               <Row>\r\n                  <TextCol lg={5}>\r\n                     <h1 className=\"leftText\"> {\"Coordinates: \"} </h1>\r\n                  </TextCol>\r\n                  <TextCol lg={7}>\r\n                     <h1 className=\"rightText\"> {\"[\" + this.state.closedLatitude + \", \" + this.state.closedLongitude + \"]\"} </h1>\r\n                  </TextCol>\r\n               </Row>\r\n               <Row>\r\n                  <TextCol lg={5}>\r\n                     <h1 className=\"leftText\"> {\"Date: \"} </h1>\r\n                  </TextCol>\r\n                  <TextCol lg={7}>\r\n                     <h1 className=\"rightText\"> {this.state.closedDate} </h1>\r\n                  </TextCol>\r\n               </Row>\r\n            </Col>\r\n            <Col>\r\n               <div className=\"imgContainer\">\r\n                   <img src={this.state.loading ? Loading : this.state.closedImageUrl } alt={\"TEMPORARY\"} className=\"satelliteImage\"/>\r\n                   <h1 className=\"categoryPara\" style={{fontSize:\"11px\",color:\"#B90E0A\", fontWeight:600}}> {\"Due to slow API, please give the website 10-15 seconds for the picture to load.\"} </h1>\r\n               </div>\r\n            </Col>\r\n         </Row>\r\n      </Container>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\nexport default NaturalEvent;\r\n","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\components\\Layout.js",[],"C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\components\\Jumbotron.js",["66","67","68"],"import React, {Component} from 'react';\r\nimport {Jumbotron as Jumbo, Container} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport backgroundHome from '../assets/backgroundMars.jpg';\r\n\r\nconst Styles = styled.div`\r\n   .jumbo{\r\n      background: backgroundHome;\r\n      background-size: cover;\r\n      height: 250px;\r\n      margin:0;\r\n      z-index: -2;\r\n      padding:0;\r\n   }\r\n   .jumboHeader{\r\n      position: relative;\r\n      margin: auto;\r\n      padding-top:25px;\r\n      padding-left:75px;\r\n      font-size: 55px;\r\n      font-weight: 800;\r\n      color: #f7f7f7;\r\n   }\r\n   .jumboText{\r\n      position: relative;\r\n      margin: auto;\r\n      padding-left:75px;\r\n      font-size: 35px;\r\n      font-weight: 400;\r\n      color: #f7f7f7;\r\n\r\n   }\r\n`;\r\nconst StyledJumbo = styled(Jumbo)`\r\n  background: url(${props => (props.jumboPic)});\r\n  background-size: cover;\r\n  height: 250px;\r\n  margin:0;\r\n  z-index: -2;\r\n  padding:0;\r\n`;\r\n\r\n\r\nclass Jumbotron extends Component{\r\n   constructor(props){\r\n     super(props);\r\n   }\r\n   render(){\r\n      return(\r\n        <Styles>\r\n          <StyledJumbo jumboPic={this.props.jumboColor}>\r\n            <h1 className=\"jumboHeader\"> {this.props.jumboHeader} </h1>\r\n            <h1 className=\"jumboText\"> {this.props.jumboText} </h1>\r\n          </StyledJumbo>\r\n        </Styles>\r\n     );\r\n  }\r\n}\r\nexport default Jumbotron;\r\n","C:\\Users\\maazt\\Desktop\\Maaz Imp\\Projects\\hubble\\src\\components\\NavigationBar.js",["69"],{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":13},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":11,"column":8,"nodeType":"72","messageId":"73","endLine":11,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":144,"column":183,"nodeType":"81","endLine":144,"endColumn":290},{"ruleId":"70","severity":1,"message":"82","line":1,"column":15,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":250,"column":66,"nodeType":"85","messageId":"86","endLine":250,"endColumn":68},{"ruleId":"83","severity":1,"message":"84","line":252,"column":46,"nodeType":"85","messageId":"86","endLine":252,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":254,"column":46,"nodeType":"85","messageId":"86","endLine":254,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":256,"column":79,"nodeType":"85","messageId":"86","endLine":256,"endColumn":81},{"ruleId":"83","severity":1,"message":"87","line":287,"column":41,"nodeType":"85","messageId":"86","endLine":287,"endColumn":43},{"ruleId":"88","severity":1,"message":"89","line":306,"column":16,"nodeType":"81","endLine":306,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":319,"column":56,"nodeType":"85","messageId":"86","endLine":319,"endColumn":58},{"ruleId":"83","severity":1,"message":"87","line":340,"column":40,"nodeType":"85","messageId":"86","endLine":340,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":348,"column":41,"nodeType":"85","messageId":"86","endLine":348,"endColumn":43},{"ruleId":"83","severity":1,"message":"87","line":426,"column":106,"nodeType":"85","messageId":"86","endLine":426,"endColumn":108},{"ruleId":"70","severity":1,"message":"90","line":9,"column":9,"nodeType":"72","messageId":"73","endLine":9,"endColumn":19},{"ruleId":"70","severity":1,"message":"91","line":2,"column":29,"nodeType":"72","messageId":"73","endLine":2,"endColumn":38},{"ruleId":"70","severity":1,"message":"92","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":45,"column":4,"nodeType":"95","messageId":"96","endLine":47,"endColumn":5},{"ruleId":"70","severity":1,"message":"97","line":3,"column":22,"nodeType":"72","messageId":"73","endLine":3,"endColumn":25},"no-unused-vars","'index' is defined but never used.","Identifier","unusedVar","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'Layout' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useCallback' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Typography' is defined but never used.","'Container' is defined but never used.","'backgroundHome' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]